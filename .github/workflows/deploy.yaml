name: Generic branch build and deployment
on:
  push:
    branches:
      - city-of-everett
jobs:
  deploy:
    name: Build image
    runs-on: ubuntu-latest
    steps:
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v6
    - name: Get Head Ref branch name (i.e The current pull request branch)
      run: |
        echo "${{ steps.branch-name.outputs.head_ref_branch }}"
    - name: Get Base Ref branch name (i.e The target of a pull request.)
      run: |
        echo "${{ steps.branch-name.outputs.base_ref_branch }}"
    - name: Check out code
      uses: actions/checkout@v2
      
    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.3'
      id: install
    - name: Install kustomize
      run: |
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash 

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: private
    - name: Build, tag, and push prod image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: stockmarket-simulation
        IMAGE_TAG: city-of-everett
      if: steps.branch-name.outputs.current_branch == 'city-of-everett'
      run: |
        cp overlay/city-of-everett/Dockerfile .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:city-of-everett .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:city-of-everett
    - name: Update kube config
      run: aws eks update-kubeconfig --name sb-StaggingDev-cluster --region us-east-1

    - name: Deploy feat/CI/CD branch to Amazon EKS
      if: steps.branch-name.outputs.current_branch == 'city-of-everett'
      run: |
        kubectl delete configmap stockmarket-simulation-configmap-city-of-everett --namespace ingress-nginx
        kubectl create configmap stockmarket-simulation-configmap-city-of-everett --from-env-file=overlay/city-of-everett/configmap/.env --namespace ingress-nginx
        kubectl delete deploy stockmarket-simulation-deployment-city-of-everett --namespace ingress-nginx
        kustomize build overlay/city-of-everett/ | kubectl apply -f -